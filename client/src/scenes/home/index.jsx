import { useState, useEffect } from "react";
import FormField from "../../components/FormField";
import Loader from "../../components/Loader";
import RenderCard from "../../components/RenderCard";

let Home = () => {
  let [isLoading, setIsLoading] = useState(false);
  let [allPost, setAllPost] = useState([]);
  let [searchText, setSearchText] = useState("");
  let [searchResult, setSearchResult] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  let fetchPost = async () => {
    setIsLoading(true);
    try {
      let response = await fetch(
        `${import.meta.env.VITE_REACT_APP_BASE_URL}/api/v1/post`,
        {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
      if (response.ok) {
        let result = await response.json();
        setAllPost(result.data.reverse());
      }
    } catch (error) {
      alert(error);
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    fetchPost();
  }, []);

  let handleSearchChange = (e) => {
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        let searchResult = allPost.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchResult(searchResult);
      }, 500)
    );
  };

  return (
    <>
      <section className="max-w-7xl mx-auto">
        <div>
          <h1 className="font-extrabold text-[#222328] text-[32px]">
            The Community Showcase
          </h1>
          <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
            Browse through a collection of imaginative and stunning images
            generated by HOMER AI (Clone of DALL-E AI)
          </p>
        </div>
        <div className="mt-16 ">
          <FormField
            labelName="Search Posts"
            type="text"
            value={searchText}
            name="text"
            placeholder="Search Posts"
            handleChange={handleSearchChange}
          />
        </div>
        <div className="mt-10">
          {isLoading ? (
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          ) : (
            <>
              {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">
                  Showing result for{" "}
                  <span className="text-[#222328]"> {searchText} </span>
                </h2>
              )}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                  <RenderCard
                    data={searchResult}
                    title="No search result found"
                  />
                ) : (
                  <RenderCard data={allPost} title="No post yet" />
                )}
              </div>
            </>
          )}
        </div>
      </section>
    </>
  );
};
export default Home;
